auth = { userid:	userid,
         email:		email,
	 password:	password	#sha224
}

user = { userid:	userid,
       	 name:		name,
         lastname: 	lastname,
	 email:		email,
	 phone:		10-digit-phone-number,
	 options:	code,		# 0 = no app, no text notification
	 				# 1 = no app, yes text notification
					# 2 = yes app, no text notification
					# 3 = yes app, yes text notification
	 friends:	[ friend1id,
	 		  friend2id ],
         invitations:   { eventid: response,
	 		  eventid: response },
	 events: 	[ eventid,
	 		  eventid,
			  eventid ],
	 modified: 	{ invitations:  { anybody: "yes",
	 		  		  friendid: "yes", # of person who mod 
	 		  		  friendid: "no" },
			  events:	{ anybody: "yes,
			  		  friendid: "yes", 
			  		  friendid: "no" } }
			  # if invitations or events has changed
       	 		  # since the last time that this info
			  # was retrieved.
       }


event = { eventid:    	eventid,
          hostid:	hostid,
	  name:		name,
	  category:	category,
	  location:	location,
	  starttime:	starttime,
	  endtime:	endtime,
	  description:	description,
	  guests:	{ guestid: response,
	  		  guestid: response }
        }

token = 'userid+' + userid + '|token+' + gen_token(userid)
key = 'okXRDgXqnDfyYK11nARRIdUy5xmuGsJi00DQuyzaGYY'

Example urls:
http://23.23.223.158/login?email=azheng@princeton.edu&password=password
http://23.23.223.158/get_users?sig=sig+13a761e017797edd5260f16bff64611a0152a97693115de645e47584|method+get_users
http://23.23.223.158/get_user?token=token+cb2de2653adb3e1bab66324523f7fbcbbc950aa9|userid+1

Quick list of authentication requirements:
Requires no authentication: 
	 login
Requires key:
	 get_users, get_user, create_user, get_events
Requires token:
	 get_auth, update_user, get_friends, add_friend, remove_friend,
	 get_event, create_event, update_event, get_guests, add_guest,
	 remove_guest, update_response

Please let me know if you think that security levels should change
in any way or that we are missing some functions.
#-----------------------------------------------
method login:
       takes: email, password
       returns: token, userid
       access: All

method get_users:
       takes: key
       returns: users
       access: Us # anyone with the app :(

method get_user:
       takes:	userid, key
       returns: user
       access:  Us

method get_self:
       takes:	token
       returns: user
       access:  this user

method get_auth:
       takes:	token
       returns: auth
       access: 	Us

method create_user:
       takes:	name, lastname, email, password, key
       returns:	user
       access: Us

method update_user:
       takes:	name, lastname, email, password, token
       returns: user
       access: this user

method remove_user:
       takes:	token
       returns: "yes" or "no"
       access: this user

method get_friends:
       takes: token
       returns: friends
       access: this user

method add_friend:
       takes:	friendid, token
       returns: "yes" or "no"
       access: this user

method add_friends:
       takes:	token, friendids (delimited by ",")
       returns: "yes" or "no"
       access: this user

method remove_friend:
       takes:	friendid, token
       returns: "yes" or "no"
       access: this user

method remove_friends:
       takes:	token, friendids (delimited by ",")
       returns: "yes" or "no"
       access: this user

method is_modified:
       takes:	token, which ("invitations" or "events"), friendid (optional)
       returns:	"yes" or "no" or "failed"
       access: this user

method get_events:				#NOTE: FOR INTERNAL USE
       takes:   key
       returns: events
       access: Us

method get_my_invitations:	#note: only method that resets need to update
       takes:	token, hostid (optional filter)
       returns: events (json array of events to which user is invited)
       access: 	this user

method get_my_events:		#note: only method that resets need to update
       takes:	token, guestid (optional filter)
       returns: events (json array of events this user is hosting)
       access: 	this user

method get_event:
       takes:	eventid, token
       returns: event
       access:  anyone invited or hosting this event

method create_event:
       takes:   name, category, location, starttime, endtime, description, token, guestids (delimited with "," this is optional)
       returns: event
       access:  a user

method update_event:
       takes(some of):	eventid, name, category, location, starttime, endtime, description, token
       returns: event
       access: host of the event

method remove_event:
       takes:	eventid, token
       returns: "yes" or "no" #true and false won't pass 
       access: host of the event

method get_guests:
       takes:	eventid, token
       returns: guests
       access: anyone invited or hosting this event

method add_guest:     	      	 	      #DEPRECATED PLEASE PHASE OUT
       takes:   eventid, guestid, token
       returns: "yes" or "no"
       access: host

method add_guests:
       takes:	eventid, token, guestids (delimited with ",")
       returns: "yes" or "no"
       access: host

method remove_guest:				#DEPRECATED PLEASE PHASE OUT
       takes:   eventid, guestid, token
       returns: "yes" or "no"
       access: host

method remove_guests:
       takes:	eventid, token, guestids (delimited with ",")
       returns: "yes" or "no"
       access: host

method update_response:
       takes:   eventid, response, token
       returns: "yes" or "no"
       access: user (guest with the token)